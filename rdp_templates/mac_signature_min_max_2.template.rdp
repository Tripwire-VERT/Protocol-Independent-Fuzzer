import struct
def generateMCSRequest( encryption_type = 16):
    x224 = '\x02\xf0\x80'
    ber_app = '\x7f\x65'
    ber_tlen = '\x82\x01\x7a'
    ci_domain_calling_select = '\x04\x01\x01'
    ci_domain_called_select = '\x04\x01\x01'
    ci_upward_flag = '\x01\x01\xff'
    ci_target_param = '\x30\x20'
    dp_max_channel_ids = '\x02\x02\x00\x22'
    dp_max_usrids = '\x02\x02\x00\x02'
    dp_max_token = '\x02\x02\x00\x00'
    dp_num_priorites = '\x02\x02\x00\x01'
    dp_throughput = '\x02\x02\x00\x00'
    dp_max_height = '\x02\x02\x00\x01'
    dp_max_mcs_pdu = '\x02\x02\xff\xff'
    dp_prot_version = '\x02\x02\x00\x02'
    ci_min_params = '\x30\x20'
    dp_min_max_channel_ids = '\x02\x02\x00\x01'
    dp_min_max_user_ids = '\x02\x02\x00\x01'
    dp_min_max_token = '\x02\x02\x00\x01'
    dp_min_num_priorites = '\x02\x02\x00\x01'
    dp_min_throughput = '\x02\x02\x00\x00'
    dp_min_max_height = '\x02\x02\x00\x01'
    dp_min_max_mcs_pdu = '\x02\x02\x04\x20'
    dp_min_prot_version = '\x02\x02\x00\x02'
    ci_max_params = '\x30\x20'
    dp_max_max_channel_ids = '\x02\x02\xff\xff'
    dp_max_max_user_ids = '\x02\x02\xfc\x17'
    dp_max_max_token = '\x02\x02\xff\xff'
    dp_max_num_priorities = '\x02\x02\x00\x01'
    dp_max_min_throughput = '\x02\x02\x00\x00'
    dp_max_max_height = '\x02\x02\x00\x01'
    dp_max_max_mcs_pdu_size = '\x02\x02\xff\xff'
    dp_max_prot_version = '\x02\x02\x00\x02'
    ci_user_data = '\x04\x82\x01\x07'
    choice = '\x00'
    obj_len = '\x05'
    obj = '\x00\x14\x7c\x00\x01'
    cd_connect_pdu = '\x80\xfe'
    ccr_cpc = '\x00'
    ccr_cnccu = '\x08'
    conference_name_num_len = '\x00'
    conference_name_num = '\x10'
    onference_name_num = '\x10'
    termination_method = '\x00'
    user_data_sets = '\x01'
    user_data_value = '\xc0'
    h221_non_standard_len = '\x00'
    h221_non_standard = '\x44\x75\x63\x61'
    user_data_len = '\x80\xf0'
    ts_ud_header_core = '\x01\xc0\xd8\x00'
    ts_ud_cs_version = '\x04\x00\x08\x00'
    ts_ud_cs_desktop_width = '\x20\x03'
    ts_ud_cs_desktop_height = '\x58\x02'
    ts_ud_cs_color_depth = '\x01\xca'
    ts_ud_cs_sassequence = '\x03\xaa'
    ts_ud_cs_key_layout = '\x09\x04\x00\x00'
    ts_ud_cs_client_build = '\x28\x0a\x00\x00'
    ts_ud_cs_client_name = '\x69\x00\x70\x00\x33\x00\x36\x00\x30\x00\x72\x00\x64\x00\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_ud_cs_key_type = '\x04\x00\x00\x00'
    ts_ud_cs_key_sub_type = '\x00\x00\x00\x00'
    ts_ud_cs_key_funct = '\x0c\x00\x00\x00'
    ts_ud_cs_ime_file_name = '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_ud_cs_post_beta_2_color = '\x01\xca'
    ts_ud_cs_client_product = '\x01\x00'
    ts_ud_cs_serial_number = '\x00\x00\x00\x00'
    ts_ud_cs_high_color = '\x18\x00'
    ts_ud_cs_sup_color = '\x07\x00'
    ts_ud_cs_early_cap_flag = '\x01\x00'
    ts_ud_cs_client_id = '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_ud_cs_connection_type = '\x00'
    ts_ud_cs_pad = '\x00'
    ts_ud_cs_core = '\x00\x00\x00\x00'
    ts_ud_header_security = '\x04\xc0\x0c\x00'
    ts_ud_cs_cluster_flags = '\x09\x00\x00\x00'
    ts_ud_cs_cluster_redirect = '\x00\x00\x00\x00'
    ts_ud_header_net = '\x02\xc0\x0c\x00'
    encryption_methods = struct.pack('<l', encryption_type)
    ext_encryption_methods = '\x00\x00\x00\x00'
    
    # build the packet
    mcs_request             = x224 + ber_app + ber_tlen + ci_domain_calling_select + ci_domain_called_select + ci_upward_flag + ci_target_param + dp_max_channel_ids + dp_max_usrids        \
                            + dp_max_token + dp_num_priorites + dp_throughput + dp_max_height + dp_max_mcs_pdu + dp_prot_version + ci_min_params + dp_min_max_channel_ids                   \
                            + dp_min_max_user_ids + dp_min_max_token + dp_min_num_priorites + dp_min_throughput + dp_min_max_height + dp_min_max_mcs_pdu + dp_min_prot_version              \
                            + ci_max_params + dp_max_max_channel_ids + dp_max_max_user_ids + dp_max_max_token + dp_max_num_priorities + dp_max_min_throughput + dp_max_max_height           \
                            + dp_max_max_mcs_pdu_size + dp_max_prot_version + ci_user_data + choice + obj_len + obj + cd_connect_pdu + ccr_cpc + ccr_cnccu + conference_name_num_len        \
                            + conference_name_num + termination_method + user_data_sets + user_data_value + h221_non_standard_len + h221_non_standard + user_data_len                       \
                            + ts_ud_header_core + ts_ud_cs_version + ts_ud_cs_desktop_width + ts_ud_cs_desktop_height + ts_ud_cs_color_depth + ts_ud_cs_sassequence                         \
                            + ts_ud_cs_key_layout + ts_ud_cs_client_build + ts_ud_cs_client_name + ts_ud_cs_key_type + ts_ud_cs_key_sub_type + ts_ud_cs_key_funct                           \
                            + ts_ud_cs_ime_file_name + ts_ud_cs_post_beta_2_color + ts_ud_cs_client_product + ts_ud_cs_serial_number + ts_ud_cs_high_color + ts_ud_cs_sup_color             \
                            + ts_ud_cs_early_cap_flag + ts_ud_cs_client_id + ts_ud_cs_connection_type + ts_ud_cs_pad + ts_ud_cs_core + ts_ud_header_security                                \
                            + ts_ud_cs_cluster_flags + ts_ud_cs_cluster_redirect + ts_ud_header_net + encryption_methods + ext_encryption_methods
    return mcs_request

def channelJoinRequest(channel):
    channel_join_request_type = '\x38'
    channel_join_request_init = '\x00\x03'
    channel_join_request_cid = struct.pack('!h', channel)
    
    channel_join_request            = channel_join_request_type + channel_join_request_init + channel_join_request_cid
    return channel_join_request

def generateErectDomain():
    erect_domain_request_type = '\x04'
    erect_domain_request_len = '\x00'
    erect_domain_request_h = '\x01'
    erect_domain_request_si_len = '\x00'
    erect_domain_request_si = '\x01'
    
    erect_domain = erect_domain_request_type + erect_domain_request_len + erect_domain_request_h + erect_domain_request_si_len + erect_domain_request_si
    return erect_domain

def confirmActive():
    ts_sch_total_length = '\xEC\x01'
    ts_sch_pdu_type = '\x13\x00'
    ts_sch_pdu_source = '\xEC\x03'
    ts_ca_share_id = '\xEA\x03\x01\x00'
    ts_ca_length_combined_cap = '\xD6\x01'
    ts_ca_source_descriptor = '\x00\x15\x44\x7F\xBA\xF6'
    ts_ca_originator_id = '\xEA\x03'
    ts_ca_length_source = '\x06\x00'
    ts_ca_number_cap = '\x12\x00'
    ts_ca_pad2octets = '\x00\x00'
    ts_ca_cap_set_type = '\x01\x00'
    ts_ca_cap_set_len = '\x18\x00'
    ts_ca_cap_set_os_major_type = '\x01\x00'
    ts_ca_cap_set_os_minor_type = '\x03\x00'
    ts_ca_cap_set_prot_version = '\x00\x02'
    ts_ca_cap_set_pad_2_oct = '\x00\x00'
    ts_ca_cap_set_gen_comp = '\x00\x00'
    ts_ca_cap_set_extra_flags = '\x00\x00'
    ts_ca_cap_set_up_cap_flag = '\x00\x00'
    ts_ca_cap_set_remote_u_share = '\x00\x00'
    ts_ca_cap_set_gen_comp_lev = '\x00\x00'
    ts_ca_cap_set_refresh = '\x00'
    ts_ca_cap_set_suppress = '\x00'
    ts_ca_bitmat_cap_set_type = '\x02\x00'
    ts_ca_bitmat_cap_set_len = '\x1C\x00'
    ts_ca_bitmat_cap_set_pbpp = '\x10\x00'
    ts_ca_bitmat_cap_set_r1bpb = '\x01\x00'
    ts_ca_bitmat_cap_set_r4bpb = '\x01\x00'
    ts_ca_bitmat_cap_set_r8bpp = '\x01\x00'
    ts_ca_bitmat_cap_set_dw = '\x00\x04'
    ts_ca_bitmat_cap_set_dh = '\x00\x03'
    ts_ca_bitmat_cap_set_p2o = '\x00\x00'
    ts_ca_bitmat_cap_set_drf = '\x01\x00'
    ts_ca_bitmat_cap_set_bcf = '\x01\x00'
    ts_ca_bitmat_cap_set_hcf = '\x00\x00'
    ts_ca_bitmat_cap_set_p1o = '\x01\x00'
    ts_ca_bitmat_cap_set_p2ob = '\x00\x00'
    ts_ca_order_cap_set_type = '\x03\x00'
    ts_ca_order_cap_set_len = '\x58\x00'
    ts_ca_order_cap_set_td = '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_ca_order_cap_set_p4oa = '\x00\x00\x00\x00'
    ts_ca_order_cap_set_dsxg = '\x01\x00'
    ts_ca_order_cap_set_dsyg = '\x14\x00'
    ts_ca_order_cap_set_p2oa = '\x00\x00'
    ts_ca_order_cap_set_mol = '\x01\x00'
    ts_ca_order_cap_set_nf = '\x47\x01'
    ts_ca_order_cap_set_of = '\x2A\x00'
    ts_ca_order_cap_set_os = '\x01\x01\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x00\x01\x01\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x01\x01\x01\x00\x00\x00\x00'
    ts_ca_order_cap_set_tf = '\xA1\x06'
    ts_ca_order_cap_set_p2ob = '\x00\x00'
    ts_ca_order_cap_set_p4ob = '\x00\x00\x00\x00'
    ts_ca_order_cap_set_dss = '\x00\x84\x03\x00'
    ts_ca_order_cap_set_p2c = '\x00\x00'
    ts_ca_order_cap_set_p2d = '\x00\x00'
    ts_ca_order_cap_set_tacp = '\xE4\x04'
    ts_ca_order_cap_set_p2oe = '\x00\x00'
    ts_ca_bitmap_cache_cap_set_type = '\x04\x00'
    ts_ca_bitmap_cache_cap_set_len = '\x28\x00'
    ts_ca_bitmap_cache_cap_set_data = '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x58\x02\x00\x03\x2C\x01\x00\x0C\x06\x01\x00\x30'
    ts_ca_color_table_cache_cap_set_type = '\x0A\x00'
    ts_ca_color_table_cache_cap_set_len = '\x08\x00'
    ts_ca_color_table_cache_cap_set_ctcs = '\x06\x00'
    ts_ca_color_table_cache_cap_set_p2o = '\x00\x00'
    ts_ca_windows_activation_cap_set_type = '\x07\x00'
    ts_ca_windows_activation_cap_set_len = '\x0C\x00'
    ts_ca_windows_activation_cap_set_hkf = '\x00\x00'
    ts_ca_windows_activation_cap_set_hkif = '\x00\x00'
    ts_ca_windows_activation_cap_set_heef = '\x00\x00'
    ts_ca_windows_activation_cap_set_wmkf = '\x00\x00'
    ts_ca_control_cap_set_type = '\x05\x00'
    ts_ca_control_cap_set_len = '\x0C\x00'
    ts_ca_control_cap_set_cf = '\x00\x00'
    ts_ca_control_cap_set_rdf = '\x00\x00'
    ts_ca_control_cap_set_ci = '\x02\x00'
    ts_ca_control_cap_set_di = '\x02\x00'
    ts_ca_pointer_cap_set_type = '\x08\x00'
    ts_ca_pointer_cap_set_len = '\x0A\x00'
    ts_ca_pointer_cap_set_cpf = '\x01\x00'
    ts_ca_pointer_cap_set_cpcs = '\x14\x00'
    ts_ca_pointer_cap_set_pcs = '\x15\x00'
    ts_ca_share_cap_set_type = '\x09\x00'
    ts_ca_share_cap_set_len = '\x08\x00'
    ts_ca_share_cap_set_ni = '\x00\x00'
    ts_ca_share_cap_set_p2o = '\x00\x00'
    ts_ca_input_cap_set_type = '\x0D\x00'
    ts_ca_input_cap_set_len = '\x58\x00'
    ts_ca_input_cap_set_if = '\x01\x00'
    ts_ca_input_cap_set_p2oa = '\x00\x00'
    ts_ca_input_cap_set_kl = '\x09\x04\x00\x00'
    ts_ca_input_cap_set_kt = '\x04\x00\x00\x00'
    ts_ca_input_cap_set_kst = '\x00\x00\x00\x00'
    ts_ca_input_cap_set_kfk = '\x0C\x00\x00\x00'
    ts_ca_input_cap_set_filename = '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_ca_sound_cap_set_type = '\x0C\x00'
    ts_ca_sound_cap_set_len = '\x08\x00'
    ts_ca_sound_cap_set_fsf = '\x01\x00'
    ts_ca_sound_cap_set_p2o = '\x00\x00'
    ts_ca_font_cap_set_type = '\x0E\x00'
    ts_ca_font_cap_set_len = '\x08\x00'
    ts_ca_font_cap_set_fsf = '\x01\x00'
    ts_ca_font_cap_set_p2o = '\x00\x00'
    ts_ca_glyph_cap_set_type = '\x10\x00'
    ts_ca_glyph_cap_set_len = '\x34\x00'
    ts_ca_glyph_cap_set_ce0 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs0 = '\x04\x00'
    ts_ca_glyph_cap_set_ce1 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs1 = '\x04\x00'
    ts_ca_glyph_cap_set_ce2 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs2 = '\x08\x00'
    ts_ca_glyph_cap_set_ce3 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs3 = '\x08\x00'
    ts_ca_glyph_cap_set_ce4 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs4 = '\x10\x00'
    ts_ca_glyph_cap_set_ce5 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs5 = '\x20\x00'
    ts_ca_glyph_cap_set_ce6 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs6 = '\x40\x00'
    ts_ca_glyph_cap_set_ce7 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs7 = '\x80\x00'
    ts_ca_glyph_cap_set_ce8 = '\xFE\x00'
    ts_ca_glyph_cap_set_cmcs8 = '\x00\x01'
    ts_ca_glyph_cap_set_ce9 = '\x40\x00'
    ts_ca_glyph_cap_set_cmcs9 = '\x00\x08'
    ts_ca_glyph_cap_set_ce_fc = '\x00\x01'
    ts_ca_glyph_cap_set_cmcs_fc = '\x00\x01'
    ts_ca_glyph_cap_set_gsl = '\x03\x00'
    ts_ca_glyph_cap_set_p2o = '\x00\x00'
    ts_ca_brush_cap_set_type = '\x0F\x00'
    ts_ca_brush_cap_set_len = '\x08\x00'
    ts_ca_brush_cap_set_bsl = '\x01\x00\x00\x00'
    ts_ca_offscreen_bitmap_cache_cap_set_type = '\x11\x00'
    ts_ca_offscreen_bitmap_cache_cap_set_len = '\x0C\x00'
    ts_ca_offscreen_bitmap_cache_cap_set_osl = '\x01\x00\x00\x00'
    ts_ca_offscreen_bitmap_cache_cap_set_ofcs = '\x00\x14'
    ts_ca_offscreen_bitmap_cache_cap_set_ofce = '\x64\x00'
    virtual_channel_cap_set_type = '\x14\x00'
    virtual_channel_cap_set_len = '\x08\x00'
    virtual_channel_cap_set_vccaps = '\x01\x00\x00\x00'
    ts_ca_draw_nine_grid_cache_set_type = '\x15\x00'
    ts_ca_draw_nine_grid_cache_set_len = '\x0C\x00'
    ts_ca_draw_nine_grid_cache_set_dngsl = '\x02\x00\x00\x00'
    ts_ca_draw_nine_grid_cache_set_dngcs = '\x00\x0A'
    ts_ca_draw_nine_grid_cache_set_dngce = '\x00\x01'
    ts_ca_drawgdiplus_cap_set_type = '\x16\x00'
    ts_ca_drawgdiplus_cap_set_len = '\x28\x00'
    ts_ca_drawgdiplus_cap_set_sl = '\x00\x00\x00\x00'
    ts_ca_drawgdiplus_cap_set_v = '\x00\x00\x00\x00'
    ts_ca_drawgdiplus_cap_set_cl = '\x00\x00\x00\x00'
    ts_ca_drawgdiplus_cap_set_ce = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_bce = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_pce = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_ice = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_imace = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_ccs = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_bccs = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_pccs = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_iacc = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_iccs = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_icts = '\x00\x00'
    ts_ca_drawgdiplus_cap_set_icms = '\x00\x00'
    
    
    ts_ca_cap_set                           = ts_ca_cap_set_type + ts_ca_cap_set_len + ts_ca_cap_set_os_major_type + ts_ca_cap_set_os_minor_type + ts_ca_cap_set_prot_version               \
                                            + ts_ca_cap_set_pad_2_oct + ts_ca_cap_set_gen_comp + ts_ca_cap_set_extra_flags + ts_ca_cap_set_up_cap_flag + ts_ca_cap_set_remote_u_share       \
                                            + ts_ca_cap_set_gen_comp_lev + ts_ca_cap_set_refresh + ts_ca_cap_set_suppress
    
    ts_ca_bitmat_cap_set                    = ts_ca_bitmat_cap_set_type + ts_ca_bitmat_cap_set_len + ts_ca_bitmat_cap_set_pbpp + ts_ca_bitmat_cap_set_r1bpb + ts_ca_bitmat_cap_set_r4bpb    \
                                            + ts_ca_bitmat_cap_set_r8bpp + ts_ca_bitmat_cap_set_dw + ts_ca_bitmat_cap_set_dh + ts_ca_bitmat_cap_set_p2o + ts_ca_bitmat_cap_set_drf          \
                                            + ts_ca_bitmat_cap_set_bcf + ts_ca_bitmat_cap_set_hcf + ts_ca_bitmat_cap_set_p1o + ts_ca_bitmat_cap_set_p2ob
    
    ts_ca_order_cap_set                      = ts_ca_order_cap_set_type + ts_ca_order_cap_set_len + ts_ca_order_cap_set_td + ts_ca_order_cap_set_p4oa + ts_ca_order_cap_set_dsxg             \
                                            + ts_ca_order_cap_set_dsyg + ts_ca_order_cap_set_p2oa + ts_ca_order_cap_set_mol + ts_ca_order_cap_set_nf + ts_ca_order_cap_set_of               \
                                            + ts_ca_order_cap_set_os + ts_ca_order_cap_set_tf + ts_ca_order_cap_set_p2ob + ts_ca_order_cap_set_p4ob + ts_ca_order_cap_set_dss               \
                                            + ts_ca_order_cap_set_p2c + ts_ca_order_cap_set_p2d + ts_ca_order_cap_set_tacp + ts_ca_order_cap_set_p2oe

    ts_ca_bitmap_cache_cap_set              = ts_ca_bitmap_cache_cap_set_type + ts_ca_bitmap_cache_cap_set_len + ts_ca_bitmap_cache_cap_set_data

    ts_ca_color_table_cache_cap_set         = ts_ca_color_table_cache_cap_set_type + ts_ca_color_table_cache_cap_set_len + ts_ca_color_table_cache_cap_set_ctcs                             \
                                            + ts_ca_color_table_cache_cap_set_p2o

    ts_ca_windows_activation_cap_set        = ts_ca_windows_activation_cap_set_type + ts_ca_windows_activation_cap_set_len + ts_ca_windows_activation_cap_set_hkf                           \
                                            + ts_ca_windows_activation_cap_set_hkif + ts_ca_windows_activation_cap_set_heef + ts_ca_windows_activation_cap_set_wmkf
    
    ts_ca_control_cap_set                   = ts_ca_control_cap_set_type + ts_ca_control_cap_set_len + ts_ca_control_cap_set_cf + ts_ca_control_cap_set_rdf + ts_ca_control_cap_set_ci      \
                                            + ts_ca_control_cap_set_di
    
    ts_ca_pointer_cap_set                   = ts_ca_pointer_cap_set_type + ts_ca_pointer_cap_set_len + ts_ca_pointer_cap_set_cpf + ts_ca_pointer_cap_set_cpcs + ts_ca_pointer_cap_set_pcs
    
    ts_ca_share_cap_set                     = ts_ca_share_cap_set_type + ts_ca_share_cap_set_len + ts_ca_share_cap_set_ni + ts_ca_share_cap_set_p2o
    
    ts_ca_input_cap_set                     = ts_ca_input_cap_set_type + ts_ca_input_cap_set_len + ts_ca_input_cap_set_if + ts_ca_input_cap_set_p2oa + ts_ca_input_cap_set_kl               \
                                            + ts_ca_input_cap_set_kt + ts_ca_input_cap_set_kst + ts_ca_input_cap_set_kfk + ts_ca_input_cap_set_filename
    
    ts_ca_sound_cap_set                     = ts_ca_sound_cap_set_type + ts_ca_sound_cap_set_len + ts_ca_sound_cap_set_fsf + ts_ca_sound_cap_set_p2o
    
    ts_ca_font_cap_set                      = ts_ca_font_cap_set_type + ts_ca_font_cap_set_len + ts_ca_font_cap_set_fsf + ts_ca_font_cap_set_p2o

    ts_ca_glyph_cap_set                     = ts_ca_glyph_cap_set_type + ts_ca_glyph_cap_set_len + ts_ca_glyph_cap_set_ce0 + ts_ca_glyph_cap_set_cmcs0 + ts_ca_glyph_cap_set_ce1            \
                                            + ts_ca_glyph_cap_set_cmcs1 + ts_ca_glyph_cap_set_ce2 + ts_ca_glyph_cap_set_cmcs2 + ts_ca_glyph_cap_set_ce3 + ts_ca_glyph_cap_set_cmcs3         \
                                            + ts_ca_glyph_cap_set_ce4 + ts_ca_glyph_cap_set_cmcs4 + ts_ca_glyph_cap_set_ce5 + ts_ca_glyph_cap_set_cmcs5 +  ts_ca_glyph_cap_set_ce6          \
                                            + ts_ca_glyph_cap_set_cmcs6 + ts_ca_glyph_cap_set_ce7 + ts_ca_glyph_cap_set_cmcs7 + ts_ca_glyph_cap_set_ce8 + ts_ca_glyph_cap_set_cmcs8         \
                                            + ts_ca_glyph_cap_set_ce9 + ts_ca_glyph_cap_set_cmcs9 + ts_ca_glyph_cap_set_ce_fc + ts_ca_glyph_cap_set_cmcs_fc + ts_ca_glyph_cap_set_gsl       \
                                            + ts_ca_glyph_cap_set_p2o
    
    ts_ca_brush_cap_set                     = ts_ca_brush_cap_set_type + ts_ca_brush_cap_set_len + ts_ca_brush_cap_set_bsl
    
    ts_ca_offscreen_bitmap_cache_cap_set    = ts_ca_offscreen_bitmap_cache_cap_set_type + ts_ca_offscreen_bitmap_cache_cap_set_len + ts_ca_offscreen_bitmap_cache_cap_set_osl               \
                                            + ts_ca_offscreen_bitmap_cache_cap_set_ofcs + ts_ca_offscreen_bitmap_cache_cap_set_ofce
    
    virtual_channel_cap_set                 = virtual_channel_cap_set_type + virtual_channel_cap_set_len + virtual_channel_cap_set_vccaps
    
    ts_ca_draw_nine_grid_cache_set          = ts_ca_draw_nine_grid_cache_set_type + ts_ca_draw_nine_grid_cache_set_len + ts_ca_draw_nine_grid_cache_set_dngsl                               \
                                            + ts_ca_draw_nine_grid_cache_set_dngcs + ts_ca_draw_nine_grid_cache_set_dngce
    
    ts_ca_drawgdiplus_cap_set               = ts_ca_drawgdiplus_cap_set_type + ts_ca_drawgdiplus_cap_set_len + ts_ca_drawgdiplus_cap_set_sl + ts_ca_drawgdiplus_cap_set_v                   \
                                            + ts_ca_drawgdiplus_cap_set_cl + ts_ca_drawgdiplus_cap_set_ce + ts_ca_drawgdiplus_cap_set_bce + ts_ca_drawgdiplus_cap_set_pce                   \
                                            + ts_ca_drawgdiplus_cap_set_ice + ts_ca_drawgdiplus_cap_set_imace + ts_ca_drawgdiplus_cap_set_ccs + ts_ca_drawgdiplus_cap_set_bccs              \
                                            + ts_ca_drawgdiplus_cap_set_pccs + ts_ca_drawgdiplus_cap_set_iacc +  ts_ca_drawgdiplus_cap_set_iccs + ts_ca_drawgdiplus_cap_set_icts            \
                                            + ts_ca_drawgdiplus_cap_set_icms
    
    client_confirm_active                   = ts_sch_total_length + ts_sch_pdu_type + ts_sch_pdu_source + ts_ca_share_id + ts_ca_originator_id + ts_ca_length_source                        \
                                            + ts_ca_length_combined_cap + ts_ca_source_descriptor + ts_ca_number_cap + ts_ca_pad2octets + ts_ca_cap_set + ts_ca_bitmat_cap_set              \
                                            + ts_ca_order_cap_set + ts_ca_bitmap_cache_cap_set + ts_ca_color_table_cache_cap_set + ts_ca_windows_activation_cap_set                         \
                                            + ts_ca_control_cap_set + ts_ca_pointer_cap_set + ts_ca_share_cap_set + ts_ca_input_cap_set + ts_ca_sound_cap_set + ts_ca_font_cap_set          \
                                            + ts_ca_glyph_cap_set + ts_ca_brush_cap_set + ts_ca_offscreen_bitmap_cache_cap_set + virtual_channel_cap_set                                    \
                                            + ts_ca_draw_nine_grid_cache_set + ts_ca_drawgdiplus_cap_set
    
    return client_confirm_active

def createClientInfo():
    ts_info_code_page = '\x09\x04\x09\x04'
    ts_info_flag = '\x33\x00\x00\x00'
    ts_info_cb_domain = '\x00\x00\x1A\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ts_info_cb_username = '\x41\x00\x64\x00\x6D\x00\x69\x00\x6E\x00\x69\x00\x73\x00\x74\x00\x72\x00\x61\x00\x74\x00\x6F\x00\x72\x00\x00\x00'
    ts_info_cb_password = '\x00\x00'
    ts_info_cb_alternate_shell = '\x00\x00'
    ts_info_cv_working_dir = '\x00\x00'
    ts_info_client_address_family = '\x02\x00'
    ts_info_client_address_len = '\x20\x00'
    ts_info_client_address = '\x31\x00\x39\x00\x32\x00\x2E\x00\x31\x00\x36\x00\x38\x00\x2E\x00\x32\x00\x32\x00\x30\x00\x2E\x00\x31\x00\x38\x00\x36\x00\x00\x00'
    ts_info_packet_cd_client_dir_len = '\x40\x00'
    ts_info_packet_cd_client_dir = '\x43\x00\x3A\x00\x5C\x00\x57\x00\x49\x00\x4E\x00\x44\x00\x4F\x00\x57\x00\x53\x00\x5C\x00\x73\x00\x79\x00\x73\x00\x74\x00\x65\x00\x6D\x00\x33\x00\x32\x00\x5C\x00\x6D\x00\x73\x00\x74\x00\x73\x00\x63\x00\x61\x00\x78\x00\x2E\x00\x64\x00\x6C\x00\x6C\x00\x00\x00'
    time_zone_info = '\x2C\x01\x00\x00'
    time_zone_standard = '\x45\x00\x61\x00\x73\x00\x74\x00\x65\x00\x72\x00\x6E\x00\x20\x00\x53\x00\x74\x00\x61\x00\x6E\x00\x64\x00\x61\x00\x72\x00\x64\x00\x20\x00\x54\x00\x69\x00\x6D\x00\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    time_zone_standard_year = '\x00\x00'
    time_zone_standard_month = '\x0A\x00'
    time_zone_standard_dayofweek = '\x00\x00'
    time_zone_standard_day = '\x05\x00'
    time_zone_standard_hour = '\x02\x00'
    time_zone_standard_minute = '\x00\x00'
    time_zone_standard_second = '\x00\x00'
    time_zone_standard_msec = '\x00\x00'
    time_zone_standard_bias = '\x00\x00\x00\x00'
    time_zone_daylight_name = '\x45\x00\x61\x00\x73\x00\x74\x00\x65\x00\x72\x00\x6E\x00\x20\x00\x44\x00\x61\x00\x79\x00\x6C\x00\x69\x00\x67\x00\x68\x00\x74\x00\x20\x00\x54\x00\x69\x00\x6D\x00\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    time_zone_daylight_year = '\x00\x00'
    time_zone_daylight_month = '\x04\x00'
    time_zone_daylight_dayofweek = '\x00\x00'
    time_zone_daylight_day = '\x01\x00'
    time_zone_daylight_hour = '\x02\x00'
    time_zone_daylight_minute = '\x00\x00'
    time_zone_daylight_second = '\x00\x00'
    time_zone_daylight_msec = '\x00\x00'
    time_zone_daylight_bias = '\xC4\xFF\xFF\xFF'
    ts_info_client_session_id = '\x00\x00\x00\x00'
    performance_flags = '\x01\x00\x00\x00'
    ts_info_packet_auto_reconnect_cookie = '\x00\x00'

    # build the packet
    client_info_packet                      = ts_info_code_page + ts_info_flag + ts_info_cb_domain + ts_info_cb_username + ts_info_cb_password + ts_info_cb_alternate_shell + ts_info_cv_working_dir \
                                            + ts_info_client_address_family + ts_info_client_address_len + ts_info_client_address + ts_info_packet_cd_client_dir_len + ts_info_packet_cd_client_dir  \
                                            + time_zone_info + time_zone_standard + time_zone_standard_year + time_zone_standard_month + time_zone_standard_dayofweek + time_zone_standard_day          \
                                            + time_zone_standard_hour + time_zone_standard_minute + time_zone_standard_second + time_zone_standard_msec + time_zone_standard_bias                    \
                                            + time_zone_daylight_name + time_zone_daylight_year + time_zone_daylight_month + time_zone_daylight_dayofweek + time_zone_daylight_day                   \
                                            + time_zone_daylight_hour + time_zone_daylight_minute + time_zone_daylight_second + time_zone_daylight_msec + time_zone_daylight_bias                    \
                                            + ts_info_client_session_id + performance_flags + ts_info_packet_auto_reconnect_cookie
    
    return client_info_packet

def generateMCSAttachUser():
    attach_user_request = '\x28'
    return attach_user_request


def generateX224Request():
    x224_len = '\x0e'
    x224_type = '\xe0'
    x224_des = '\x00\x00'
    x224_source = '\x00\x00'
    x224_co = '\x00'
    rdp_neg_req_type = '\x01'
    rdp_neg_req_flags = '\x00'
    rdp_neg_req_len = '\x08\x00'
    rdp_neg_req_protocol = '\x00\x00\x00\x00'
    
    
    x224_request            = x224_len + x224_type + x224_des + x224_source + x224_co + rdp_neg_req_type + rdp_neg_req_flags + rdp_neg_req_len + rdp_neg_req_protocol
    return x224_request


def macSignature(crypto, data):
    mac_signature = '\xff\xff\xff\xff\xff\xff\xff\xff'
    
    return mac_signature